---
layout: post
title: Changes to the ObjectiveMax repository
kind: article
menu: blog
created_at: 2011-08-11
location: Albi, France
author: Julien Rabin
h1: Changes to the ObjectiveMax repository
categories:
- Git
- submodules
- Objective-Max
---

*This blog post is intended at developers and users that do not use the Jamoma installers, but rather check out the code from GitHub, and compile externals and frameworks themselves.*

At the BOD meeting yesterday it was decided to move the ObjectiveMax repository. This has previously been hosted at Tim's Github account, but has now been moved to become part of the jamoma context. The new location is "here":https://github.com/jamoma/ObjectiveMax.

ObjectiveMax is a high-level API for writing objects in C, C++, and Objective-C targetted for Max and Max-like environments. In Jamoma ObjectiveMax is a submodule of the *supports* submodule, located in the *objectivemax* folder. It is used in the various Jamoma frameworks for interfacing with the MaxMSP SDK.

The Jamoma repositories have been updated today, but there will probably be some work required for each of us to get our local repositories in line. Here is what I did to get this up and running locally:

h2. 1) Update supports 

In Terminal, located at the folder of the main Jamoma repository, run the following 4 commands one by one (you can past them all into Terminal in one go):\

<pre>
<code class="language-bash">
git submodule foreach git submodule foreach git checkout master
git submodule foreach git submodule foreach git pull
git submodule foreach git submodule foreach git submodule init
git submodule foreach git submodule foreach git submodule update
</code>
</pre>

By now all support submodules should be updated to refer to github.com/jamoma/support rather than github.com/tap/support

h2. 2) Update objectivemax

Now try updating the objectivemax submodules (you can all four commands into Terminal in one go):

<pre>
<code class="language-bash">
git submodule foreach git submodule foreach git submodule foreach git checkout master
git submodule foreach git submodule foreach git submodule foreach git pull
git submodule foreach git submodule foreach git submodule foreach git submodule init
git submodule foreach git submodule foreach git submodule foreach git submodule update
</code>
</pre>


h2. 3) Check to see if objectivemax is working

Now try pulling the objectivemax submodules:

<pre>
<code class="language-bash">
git submodule foreach git submodule foreach git submodule foreach git submodule foreach git pull
</code>
</pre>

h2. 4) If it is not, fix it

This command might bring up error messages, as the .git/config file inside the objectivemax folder might still be referencing github.com/tap. If so, see from the error messages in Terminal which submodule failed to be pulled. If you e.g. see that the objectivemax submodule inside AudioGraph failed, you can edit the file with this command (provided that you are on Mac with TextMate installed):

<pre>
<code class="language-bash">
mate Modules/AudioGraph/supports/objectivemax/.git/config
</code>
</pre>

Change this line:

<pre>
<code class="language-bash">
url = git://github.com/tap/ObjectiveMax.git
</code>
</pre>

to:

<pre>
<code class="language-bash">
url = git@github.com:jamoma/ObjectiveMax.git
</code>
</pre>

This will update the repository reference and make it writeable, so that you can commit changes in the future.


Now go back to step 3, and loop through 3 and 4 until it's all OK.

If you get into problems, please use the jamoma-devel mailing list to get support.


*EDIT*

As reported on the "Jamoma dev list":http://jamoma-forums-mailing-lists.3076123.n2.nabble.com/ObjectiveMax-moved-to-github-com-jamoma-tp6671566p6671880.html, you can also use the "attached Ruby script":attachments/updateRemotes.rb.zip that will take care of this. Just put the script in your "Tools" folder, then run it from Terminal. When done, you can run the usual script "update.rb" with the following arguments : "master all". This will checkout all Git modules and submodules from the master branch and do the submodule initialisation and update. Hope this helps.
